{"version":3,"sources":["services/api.js","componentes/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","_templateObject","Form","form","styles_templateObject","props","error","rotate","keyframes","_templateObject2","SubmitButton","button","attrs","type","disabled","loading","_templateObject3","css","_templateObject4","List","ul","_templateObject5","ErrorMessage","span","_templateObject6","EmptyList","h3","_templateObject7","Main","state","newRepo","repositories","status","message","addRepositories","_this","setState","name","handleInputChange","e","target","value","handleRepoRemove","currentRepo","filter","repository","handleSubmit","_callee","_this$state","response","data","currentError","_err$toString$split","_err$toString$split2","regenerator_default","a","wrap","_context","prev","next","preventDefault","Error","find","trim","get","concat","sent","full_name","Object","toConsumableArray","t0","toString","split","slicedToArray","finish","stop","storage","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","_this2","_this$state2","react_default","createElement","componentes_Container","index_esm","onSubmit","placeholder","onChange","color","size","length","map","key","onClick","react_router_dom","to","encodeURIComponent","Component","Repository_styles_templateObject","Loading","styles_templateObject2","LoadingIssueList","styles_templateObject3","Owner","header","styles_templateObject4","IssueList","styles_templateObject5","Pagination","styles_templateObject6","ButtonGroup","styles_templateObject7","IssueType","_templateObject8","active","Repository","issues","issueValues","loadingIssueList","page","showingIssues","componentDidMount","match","repoName","_ref2","_ref3","decodeURIComponent","params","Promise","all","per_page","handleIssueList","_callee2","_context2","fetchIssues","handlePagination","_callee3","_context3","_callee4","_context4","src","owner","avatar_url","alt","login","description","issueValue","issue","String","id","user","href","html_url","title","labels","label","Routes","basename","process","react_router","exact","path","component","createGlobalStyle","global_templateObject","App","Fragment","global","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6cf437ed.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","/* Container components - grants reusability (used both on Main.js and Repository.js) */\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    max-width: 700px; /* largura maxima */\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n    padding: 30px;\n    margin: 80px auto;\n\n    h1 {\n        font-size: 20px;\n        display: flex;\n        flex-direction: row;\n        align-items: center; /* garante que fiquem alinhados horizontalmente */\n\n        svg {\n            margin-right: 10px;\n        }\n    }\n`;\n\nexport default Container;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n    margin-top: 30px;\n    display: flex;\n    flex-direction: row; /* garantir que o input e o botao fiquem ao lado\n    não importando qual seja o tamanho */\n\n    input {\n        flex: 1; /* (flex-grow) faz estender para o tamanho maximo disponivel */\n        border: 1px solid ${props => (props.error ? '#e00' : '#eee')};\n        padding: 10px 15px;\n        border-radius: 4px;\n        font-size: 16px;\n    }\n`;\n\nconst rotate = keyframes`\n    /* from = estado do começo da animação (0), até o to: estado final (360) */\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n    /* é possível passar atributos pelo styled components;\n    esse atributo 'submit' seria passado pelo html, é pra indicar que o botao\n    faz o submit do form */\n    type: 'submit',\n    // quando o loading do props for true, ativará o atributo disabled\n    disabled: props.loading,\n}))`\n    background: #7159c1;\n    border: 0;\n    padding: 0 15px;\n    margin-left: 10px;\n    border-radius: 4px;\n\n    /* garante que o conteudo do botao esteja centralizado */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* isso só será aplicado quando disabled for true */\n    &[disabled] {\n        cursor: not-allowed;\n        opacity: 0.6;\n    }\n\n    /*  isso só acontece caso loading seja true */\n    /*  a prop css serve para acidionar css para um elemento baseado em uma\n        informação que vem de fora */\n    ${props =>\n        props.loading &&\n        css`\n            svg {\n                animation: ${rotate} 2s linear infinite;\n            }\n        `}\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin-top: 20px;\n\n    li {\n        padding: 15px 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n\n        /* aplica o css em algum elemento que venha depois do elemento atual\n        (no caso o &) e que seja li; no caso, todos li menos o primeiro */\n        & + li {\n            border-top: 1px solid #eee;\n        }\n\n        div {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            svg {\n                padding-top: 2px;\n                margin-right: 10px;\n                color: #7159c1;\n                cursor: pointer;\n            }\n        }\n    }\n\n    a {\n        color: #7159c1;\n        text-decoration: none;\n    }\n`;\n\nexport const ErrorMessage = styled.span`\n    font-size: 12px;\n    margin-left: 5px;\n    color: #e00;\n`;\n\nexport const EmptyList = styled.h3`\n    font-weight: normal;\n    font-size: 15px;\n    margin: 30px 0px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    button {\n        color: #7159c1;\n        cursor: pointer;\n        background: white;\n        border: 0;\n    }\n`;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner, FaTimes } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../componentes/Container';\nimport { Form, SubmitButton, List, ErrorMessage, EmptyList } from './styles';\n\nexport default class Main extends Component {\n    state = {\n        newRepo: '',\n        repositories: [],\n        loading: false,\n        error: { status: false, message: '' },\n    };\n\n    // carregar os dados do localstorage\n    componentDidMount() {\n        const storage = localStorage.getItem('repositories');\n\n        // caso já tenha algo salvo no localstorage, coloca no state\n        if (storage) {\n            this.setState({ repositories: JSON.parse(storage) });\n        }\n    }\n\n    // salvar os dados do localstorage\n    componentDidUpdate(_, prevState) {\n        const { repositories } = this.state;\n\n        // caso nessa mudança de estado o repositories mude, alterar o LS\n        if (prevState.repositories !== repositories) {\n            localStorage.setItem('repositories', JSON.stringify(repositories));\n        }\n    }\n\n    addRepositories = () => {\n        this.setState({\n            repositories: [\n                { name: 'facebook/react' },\n                { name: 'facebook/react-native' },\n                { name: 'nodejs/node' },\n                { name: 'vuejs/vue' },\n                { name: 'angular/angular' },\n                { name: 'ant-design/ant-design' },\n            ],\n        });\n    };\n\n    handleInputChange = e => {\n        this.setState({ newRepo: e.target.value });\n    };\n\n    handleRepoRemove = currentRepo => {\n        const { repositories } = this.state;\n\n        this.setState({\n            repositories: repositories.filter(\n                repository => repository.name !== currentRepo\n            ),\n        });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        this.setState({ loading: true });\n\n        try {\n            const { newRepo, repositories } = this.state;\n\n            if (newRepo === '')\n                throw new Error('Try searching for a valid repository');\n\n            const repoExists = repositories.find(\n                repository => repository.name === newRepo.trim()\n            );\n\n            if (repoExists)\n                throw new Error('This repository was already saved');\n\n            const response = await api.get(`/repos/${newRepo}`);\n\n            const data = { name: response.data.full_name };\n\n            this.setState({\n                repositories: [...repositories, data],\n                newRepo: '',\n                error: { status: false, message: '' },\n            });\n        } catch (err) {\n            let currentError;\n\n            if (err.response && err.response.status === 404) {\n                currentError = 'This repository does not exists';\n            } else {\n                [, currentError] = err.toString().split(': ');\n            }\n\n            this.setState({\n                error: { status: true, message: currentError },\n            });\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    render() {\n        const { newRepo, loading, repositories, error } = this.state;\n\n        return (\n            <Container>\n                <h1>\n                    <FaGithubAlt />\n                    Repositories\n                </h1>\n                {/* quando criar um styled component? quando este tiver mais de\n                dois níveis de encadeamento, assim isolando do resto da app */}\n                <Form onSubmit={this.handleSubmit} error={error.status}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add repository\"\n                        value={newRepo}\n                        onChange={this.handleInputChange}\n                    />\n                    <SubmitButton loading={loading ? 1 : 0}>\n                        {loading ? (\n                            <FaSpinner color=\"#FFF\" size={14} />\n                        ) : (\n                            <FaPlus color=\"#FFF\" size={14} />\n                        )}\n                    </SubmitButton>\n                </Form>\n\n                <ErrorMessage>{error.message}</ErrorMessage>\n\n                {repositories.length > 0 ? (\n                    <List>\n                        {repositories.map(repository => (\n                            <li key={repository.name}>\n                                <div>\n                                    <FaTimes\n                                        onClick={() =>\n                                            this.handleRepoRemove(\n                                                repository.name\n                                            )\n                                        }\n                                    />\n                                    <span>{repository.name}</span>\n                                </div>\n                                <Link\n                                    to={`/repository/${encodeURIComponent(\n                                        repository.name\n                                    )}`}\n                                >\n                                    Details\n                                </Link>\n                            </li>\n                        ))}\n                    </List>\n                ) : (\n                    <EmptyList>\n                        You haven&apos;t saved any repositories yet. Try\n                        searching above or&nbsp;\n                        <button onClick={this.addRepositories} type=\"button\">\n                            clicking here\n                        </button>\n                        &nbsp;to add some :)\n                    </EmptyList>\n                )}\n            </Container>\n        );\n    }\n}\n","import styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n    /* from = estado do começo da animação (0), até o to: estado final (360) */\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\nexport const Loading = styled.div`\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n\n    svg {\n        animation: ${rotate} 2s linear infinite;\n    }\n`;\n\nexport const LoadingIssueList = styled.div`\n    color: #7159c1;\n    min-height: 400px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    svg {\n        animation: ${rotate} 2s linear infinite;\n    }\n`;\n\nexport const Owner = styled.header`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    div {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        svg {\n            padding-right: 5px;\n        }\n    }\n\n    a {\n        color: #7159c1;\n        font-size: 16px;\n        text-decoration: none;\n    }\n\n    img {\n        width: 120px;\n        border-radius: 50%;\n        margin-top: 20px;\n    }\n\n    h1 {\n        font-size: 24px;\n        margin-top: 10px;\n    }\n\n    p {\n        margin-top: 5px;\n        font-size: 14px;\n        color: #666;\n        line-height: 1.4;\n        text-align: center;\n        max-width: 400px;\n    }\n`;\n\nexport const IssueList = styled.ul`\n    list-style: none;\n\n    li {\n        display: flex;\n        padding: 15px 10px;\n        border: 1px solid #eee;\n        border-radius: 4px;\n\n        /* aplica o css em algum elemento que venha depois do elemento atual\n        (no caso o &) e que seja li; no caso, todos li menos o primeiro */\n        & + li {\n            margin-top: 10px;\n        }\n\n        img {\n            width: 36px;\n            height: 36px;\n            border-radius: 50%;\n            border: 2px solid #eee;\n        }\n\n        div {\n            /* é o flex grow, pra ocupar todo o espaço; assim, caso algum\n            titulo seja maior que o espaço disponivel, quebra a linha */\n            flex: 1;\n            margin-left: 15px;\n\n            strong {\n                font-size: 16;\n\n                a {\n                    text-decoration: none;\n                    color: #333;\n\n                    &:hover {\n                        color: #7159c1;\n                    }\n                }\n\n                span {\n                    background: #eee;\n                    color: #333;\n                    border-radius: 2px;\n                    font-size: 12px;\n                    font-weight: 600;\n                    height: 20px;\n                    padding: 3px 4px;\n                    margin-left: 10px;\n                    margin-top: 5px;\n                    line-height: 2;\n                }\n            }\n\n            p {\n                margin-top: 5px;\n                font-size: 12px;\n                color: #999;\n            }\n        }\n    }\n`;\n\nexport const Pagination = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    button {\n        background: white;\n        height: 24px;\n        width: 75px;\n        font-weight: bold;\n        font-size: 12px;\n        color: #7159c1;\n        border: 1px solid #7159c1;\n        border-radius: 16px;\n        margin-top: 30px;\n\n        &[disabled] {\n            cursor: not-allowed;\n            opacity: 0.6;\n        }\n    }\n\n    span {\n        margin-top: 30px;\n        font-size: 12px;\n    }\n`;\n\nexport const ButtonGroup = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: 30px;\n    /* esses tres abaixo é pra fazer aparecer um traço, este estará entre o\n    padding e a margin abaixo */\n    padding-top: 30px;\n    margin-top: 30px;\n    border-top: 1px solid #eee;\n`;\n\nexport const IssueType = styled.button`\n    height: 34px;\n    background: ${props => (props.active ? '#f4f2fc' : 'white')};\n    width: 90px;\n    font-weight: bold;\n    font-size: 14px;\n    color: #7159c1;\n    border: 1px solid #7159c1;\n    border-radius: 16px;\n    margin: 0px 2px;\n    text-transform: capitalize;\n`;\n","import React, { Component } from 'react';\nimport { FaSpinner, FaArrowLeft } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../componentes/Container';\nimport {\n    Loading,\n    Owner,\n    IssueList,\n    ButtonGroup,\n    IssueType,\n    LoadingIssueList,\n    Pagination,\n} from './styles';\n\nexport default class Repository extends Component {\n    static propTypes = {\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                repository: PropTypes.string,\n            }),\n        }).isRequired,\n    };\n\n    state = {\n        repository: {},\n        issues: [],\n        issueValues: [{ value: 'all' }, { value: 'open' }, { value: 'closed' }],\n        loading: true,\n        loadingIssueList: null,\n        page: 1,\n        showingIssues: 'all',\n    };\n\n    componentDidMount = async () => {\n        const { match } = this.props;\n        const { showingIssues } = this.state;\n\n        const repoName = decodeURIComponent(match.params.repository);\n\n        // faz as duas requisições ao mesmo tempo, em vez de aguardar que ambas\n        // aconteçam isoladamente; então com desestruturação pega cada uma em\n        // uma variavel, já que vem em formato de array\n        const [repository, issues] = await Promise.all([\n            api.get(`/repos/${repoName}`),\n            api.get(`/repos/${repoName}/issues`, {\n                // query params, viriam com / em frente, mas axios deixa passar\n                // essa propriedade:\n                params: {\n                    state: showingIssues,\n                    per_page: 5,\n                },\n            }),\n        ]);\n\n        this.setState({\n            repository: repository.data,\n            issues: issues.data,\n            loading: false,\n        });\n    };\n\n    handleIssueList = async e => {\n        await this.setState({\n            showingIssues: e.target.value,\n            loadingIssueList: true,\n            page: 1,\n        });\n\n        this.fetchIssues();\n    };\n\n    handlePagination = async e => {\n        const { page } = this.state;\n\n        await this.setState({\n            page: e.target.value === 'previous' ? page - 1 : page + 1,\n            loadingIssueList: true,\n        });\n\n        this.fetchIssues();\n    };\n\n    fetchIssues = async () => {\n        const { showingIssues, repository, page } = this.state;\n\n        const repoName = repository.full_name;\n\n        const issues = await api.get(`/repos/${repoName}/issues?page=${page}`, {\n            params: {\n                state: showingIssues,\n                per_page: 5,\n            },\n        });\n\n        this.setState({\n            issues: issues.data,\n            loadingIssueList: false,\n        });\n    };\n\n    render() {\n        const {\n            repository,\n            issues,\n            issueValues,\n            loading,\n            loadingIssueList,\n            page,\n            showingIssues,\n        } = this.state;\n\n        if (loading) {\n            return (\n                <Loading>\n                    <FaSpinner size={75} />\n                </Loading>\n            );\n        }\n\n        return (\n            <Container>\n                <Owner>\n                    <Link to=\"/\">\n                        <div>\n                            <FaArrowLeft /> Back to previous page\n                        </div>\n                    </Link>\n                    <img\n                        src={repository.owner.avatar_url}\n                        alt={repository.owner.login}\n                    />\n                    <h1>{repository.name}</h1>\n                    <p>{repository.description}</p>\n                </Owner>\n\n                <ButtonGroup>\n                    {issueValues.map(issueValue => (\n                        <IssueType\n                            key={issueValue.value}\n                            onClick={this.handleIssueList}\n                            value={issueValue.value}\n                            type=\"button\"\n                            active={showingIssues === issueValue.value ? 1 : 0}\n                        >\n                            {issueValue.value}\n                        </IssueType>\n                    ))}\n                </ButtonGroup>\n\n                {loadingIssueList ? (\n                    <LoadingIssueList>\n                        <FaSpinner size={40} />\n                    </LoadingIssueList>\n                ) : (\n                    <IssueList>\n                        {issues.map(issue => (\n                            // é bom colocar string como key\n                            <li key={String(issue.id)}>\n                                <img\n                                    src={issue.user.avatar_url}\n                                    alt={issue.user.login}\n                                />\n                                <div>\n                                    <strong>\n                                        <a href={issue.html_url}>\n                                            {issue.title}\n                                        </a>\n                                        {issue.labels.map(label => (\n                                            <span key={String(label.id)}>\n                                                {label.name}\n                                            </span>\n                                        ))}\n                                    </strong>\n                                    <p>{issue.user.login}</p>\n                                </div>\n                            </li>\n                        ))}\n                        <Pagination>\n                            <button\n                                value=\"previous\"\n                                type=\"button\"\n                                onClick={this.handlePagination}\n                                disabled={page === 1 ? 1 : 0}\n                            >\n                                Previous\n                            </button>\n                            <span> Page {page}</span>\n                            <button\n                                value=\"next\"\n                                type=\"button\"\n                                onClick={this.handlePagination}\n                            >\n                                Next\n                            </button>\n                        </Pagination>\n                    </IssueList>\n                )}\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path=\"/\" component={Main} />\n                <Route path=\"/repository/:repository\" component={Repository} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    /*  reset global de propriedades */\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n\n    /*  faz com que ocupem 100% da altura, indo até o fim da pagina no browser\n        já que no padrão ocupa apenas parte da tela */\n    html, body, #root {\n        min-height: 100%;\n    }\n\n    body {\n        background: #7159c1;\n        /* deixar resolução da letra melhor */\n        -webkit-font-smoothing: antialiased !important;\n    }\n\n    body, input, button {\n        color: #222;\n        font-size: 14px;\n        font-family: Arial, Helvetica, sans-serif;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n    return (\n        <>\n            <Routes />\n            <GlobalStyle />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}